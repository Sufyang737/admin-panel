// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      Role     @default(DEFAULT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  ADMIN
  DEV
  CONTABLE
  DEFAULT
}

model Persona {
  id                 String    @id @default(cuid())
  nombre             String
  apellido           String
  telefono           String?
  email              String?
  cumpleanos         DateTime?
  eventoCalendarioId String?
  cliente            Cliente?  @relation(fields: [clienteId], references: [id])
  clienteId          String?
}

model Cliente {
  id       String    @id @default(cuid())
  nombre   String
  email    String
  ciudad   Ciudad    @relation(fields: [ciudadId], references: [id])
  ciudadId String
  personas Persona[]
  eventos  Evento[]
}

model Ciudad {
  id       String    @id @default(cuid())
  nombre   String
  clientes Cliente[]
}

model Evento {
  id           String     @id @default(cuid())
  fecha        DateTime
  numInvitados Int
  tipoEvento   TipoEvento @relation(fields: [tipoEventoId], references: [id])
  tipoEventoId String
  cliente      Cliente    @relation(fields: [clienteId], references: [id])
  clienteId    String
  carpetaId    String?
  estado       String
  planner      Empleada   @relation(fields: [plannerId], references: [id])
  plannerId    String
}

model TipoEvento {
  id      String   @id @default(cuid())
  nombre  String
  eventos Evento[]
}

model Empleada {
  id       String        @id @default(cuid())
  nombre   String
  apellido String
  dni      String
  email    String
  telefono String
  roles    EmpleadaRol[]
  eventos  Evento[]
}

model EmpleadaRol {
  id         String      @id @default(cuid())
  empleada   Empleada    @relation(fields: [empleadaId], references: [id])
  empleadaId String
  rol        RolEmpleada
}

enum RolEmpleada {
  SOCIA
  PLANNER
  STAFF
  ADMINISTRATIVA
}

model Movimiento {
  id              String           @id @default(cuid())
  monto           Float
  moneda          Moneda
  categoria       CatMov           @relation(fields: [categoriaId], references: [id])
  categoriaId     String
  subcategoria    SubcatMovimiento @relation(fields: [subcategoriaId], references: [id])
  subcategoriaId  String
  detalle         DetMov           @relation(fields: [detalleId], references: [id])
  detalleId       String
  ingreso         Boolean
  fechaProgramado DateTime
  fechaRecibido   DateTime?
}

enum Moneda {
  USD
  ARS
}

model CatMov {
  id            String             @id @default(cuid())
  nombre        String
  descripcion   String?
  movimientos   Movimiento[]
  subcategorias SubcatMovimiento[]
}

model SubcatMovimiento {
  id          String       @id @default(cuid())
  catMov      CatMov       @relation(fields: [catMovId], references: [id])
  catMovId    String
  nombre      String
  descripcion String?
  movimientos Movimiento[]
  detalles    DetMov[]
}

model DetMov {
  id                 String           @id @default(cuid())
  subcatMovimiento   SubcatMovimiento @relation(fields: [subcatMovimientoId], references: [id])
  subcatMovimientoId String
  nombre             String
  descripcion        String?
  movimientos        Movimiento[]
}
